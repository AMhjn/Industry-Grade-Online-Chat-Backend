version: "3.8"

services:
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-init
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      echo '⏳ Waiting for Kafka to be ready...' &&
        cub kafka-ready -b kafka:9092 1 20 &&
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic user.created --partitions 1 --replication-factor 1 &&
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic message.sent --partitions 1 --replication-factor 1 &&
        echo '✅ Kafka topics created'
      "

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    ports:
      - "8084:8081"
    depends_on:
      - kafka-init
      - redis
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/chat_auth_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: abhir
      SPRING_REDIS_HOST: redis
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8083:8082"
    depends_on:
      - kafka-init
      - redis
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/chat_user_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: abhir
      SPRING_REDIS_HOST: redis
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  message-service:
    build:
      context: ./message-service
    container_name: message-service
    ports:
      - "8085:8085"
    depends_on:
      - kafka-init
      - redis
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/chat_message_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: abhir
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092


volumes:
  mysql_data:
